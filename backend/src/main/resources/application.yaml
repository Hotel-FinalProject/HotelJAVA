server:
  port: 8081

spring:
  application:
    name: backend
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USER}
    password: ${DATABASE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto:  update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: sudongtaemsa6th@gmail.com
    password: ulimcmoofcvhyflz
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true
  security:
    oauth2:
      client:
        registration:
          naver:
            clientId: 
            clientSecret: 
            scope:
              - email
              - response
            redirect-uri: 
            client-name: naver
            authorization-grant-type: authorization_code
          google:
            clientId: 
            clientSecret: 
            scope:
              - email
              - profile
              - https://www.googleapis.com/auth/contacts.readonly
            redirect-uri: "http://localhost:8081/login/oauth2/code/{registrationId}"
            client-name: google
            authorization-grant-type: authorization_code
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
google:
  people-api-url: "https://people.googleapis.com/v1/people/me"

jwt:
  secret: 

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace
hotel:
  key: 

api:
  key: 

import:
  api-key: 
  secret-key: 

aws:
  access-key-id: ${ACCESS_KEY_ID}
  secret-access-key: ${ACCESS_SCRETKEY_ID}
  s3:
    bucket-name: hotel-java
    region: ap-northeast-2


