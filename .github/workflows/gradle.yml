name: CI/CD Docker3

# 트리거를 수행할 브랜치를 지정합니다.
on:
  push:
    branches: [ main ]

# 환경설정
env:
  VERSION: 'v1.0'
  NAME: erppro

jobs:
  # Spring Boot 애플리케이션을 빌드하여 도커허브에 푸시하는 과정
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1. Java 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # gradlew에 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./backend/gradlew

      # 2. Spring Boot 애플리케이션 빌드
      - name: Build with Gradle
        run: |
          cd backend
          ./gradlew clean bootJar

      # 3. Docker 이미지 빌드
      - name: Docker image build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/erppro:${{ env.VERSION }} ./backend

      # 4. DockerHub 로그인
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Docker Hub 이미지 푸시
      - name: Docker Hub push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/erppro:${{ env.VERSION }}

  deploy:
    needs: build-docker-image
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 1. Install docker-compose
      - name: Install docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # 2. Run Docker Compose
      - name: Run Docker Compose
        run: |
          cd $GITHUB_WORKSPACE/backend
          docker-compose down || true  # sudo 제거
          docker-compose up -d  # sudo 제거

      # 불필요한 이미지 정리
      - name: Clean up unused images
        run: docker image prune -af  # sudo 제거
