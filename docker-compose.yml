version: '3'

services:
  # Vue Frontend 추가
  frontend:
    image: sumin22/erppro-frontend:v1.0
    container_name: "frontend"
    ports:
      - "80:80"  # 프론트엔드 앱을 외부에서 접근할 수 있도록 포트 80에 바인딩
    volumes:
      - ./frontend:/usr/share/nginx/html
    environment:
      - NODE_ENV=production  # Vue의 환경 설정, production 모드
    networks:
      - app-network

  # Spring Boot WAS1
  was1:
    build: .
    container_name: "was1"
    image: "sumin22/erppro:v1.0"
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: ${DATABASE_URL}
      SPRING_DATASOURCE_USERNAME: ${DATABASE_USER}
      SPRING_DATASOURCE_PASSWORD: ${DATABASE_PASSWORD}
      SPRING_PROFILES_ACTIVE: local
    restart: always
    networks:
      - app-network

  # Spring Boot WAS2
  was2:
    build: .
    image: "sumin22/erppro:v1.0"
    container_name: "was2"
    ports:
      - "8082:8081"
    environment:
      SPRING_DATASOURCE_URL: ${DATABASE_URL}
      SPRING_DATASOURCE_USERNAME: ${DATABASE_USER}
      SPRING_DATASOURCE_PASSWORD: ${DATABASE_PASSWORD}
    networks:
      - app-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx
    container_name: "webserver"
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - was1
      - was2
networks:
  app-network:
    driver: bridge